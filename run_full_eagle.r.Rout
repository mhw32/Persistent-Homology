
R version 3.2.2 (2015-08-14) -- "Fire Safety"
Copyright (C) 2015 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> source("process_eagle.r")
Warning messages:
1: In rgl.init(initValue, onlyNULL) : RGL: unable to open X11 display
2: In fun(libname, pkgname) : Error in 'rgl_init'
> source("testlib.r")
Loading required package: robustbase
Scalable Robust Estimators with High Breakdown Point (version 1.3-11)


Attaching package: ‘rrcov’

The following object is masked from ‘package:pracma’:

    sqrtm

Loading required package: KernSmooth
KernSmooth 2.23 loaded
Copyright M. P. Wand 1997-2009
Loading required package: misc3d

Attaching package: ‘ks’

The following object is masked from ‘package:TDA’:

    kde

> source("localtest.r")
Loading required package: spam
Loading required package: grid
Spam version 1.3-0 (2015-10-24) is loaded.
Type 'help( Spam)' or 'demo( spam)' for a short introduction 
and overview of this package.
Help for individual functions is also obtained by adding the
suffix '.spam' to the function name, e.g. 'help( chol.spam)'.

Attaching package: ‘spam’

The following objects are masked from ‘package:base’:

    backsolve, forwardsolve

Loading required package: maps

 # ATTENTION: maps v3.0 has an updated 'world' map.        #
 # Many country borders and names have changed since 1990. #
 # Type '?world' or 'news(package="maps")'. See README_v3. #


> library(ks)
> # Loading the data
> cdm <- load_CDM()
> wdm <- load_WDM()
> # Plot these actual diagrams
> # png(filename="./saved_states/cdmplot.png")
> # scatterplot3d(cdm, pch=19, cex.symbols=0.001)
> # dev.off()
> # png(filename="./saved_states/wdmplot.png")
> # scatterplot3d(wdm, pch=19, cex.symbols=0.001)
> # dev.off()
> # Settings for generating diagrams
> res <- 1.5
> boxlim <- c(0, 100) # Full size for the box.
> # Create the one persistence diagram
> cdm_diag <- gridDiag(cdm, dtm, lim=cbind(boxlim, boxlim, boxlim), by=res, sublevel=T, printProgress=T, m0=0.001)
# Generated complex of size: 6403717 

0%   10   20   30   40   50   60   70   80   90   100%
|----|----|----|----|----|----|----|----|----|----|
***************************************************
# Persistence timer: Elapsed time [ 71.760000 ] seconds
> wdm_diag <- gridDiag(wdm, dtm, lim=cbind(boxlim, boxlim, boxlim), by=res, sublevel=T, printProgress=T, m0=0.001)
# Generated complex of size: 6403717 

0%   10   20   30   40   50   60   70   80   90   100%
|----|----|----|----|----|----|----|----|----|----|
***************************************************
# Persistence timer: Elapsed time [ 62.650000 ] seconds
> # Save these diagrams.
> saveRDS(cdm_diag, "./saved_states/full_cdm_diag.rds")
> saveRDS(wdm_diag, "./saved_states/full_wdm_diag.rds")
> # Run the single test we need  -- global kde test.
> pval <- ks::kde.test(cdm_diag$diagram, wdm_diag$diagram)$pvalue
> print(paste("Full global kde test result:",pval,sep=" "))
[1] "Full global kde test result: 0.646992883717662"
> # Full global kde test result: 0.6944359
> # Run the local kde test.
> # localdiagplot(cdm_diag$diagram, wdm_diag$diagram, 0, "CDM/WDM 0 dim", "./saved_states/localks-0-dim.png")
> # localdiagplot(cdm_diag$diagram, wdm_diag$diagram, 1, "CDM/WDM 1 dim", "./saved_states/localks-1-dim.png")
> # localdiagplot(cdm_diag$diagram, wdm_diag$diagram, 2, "CDM/WDM 2 dim", "./saved_states/localks-2-dim.png")
> 
> proc.time()
    user   system  elapsed 
5796.214   18.629 5825.266 
